<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maiworld.mapper.TbCostMapper" >
 <resultMap id="BaseResultMap" type="com.maiworld.pojo.TbCost" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sid" property="sid" jdbcType="BIGINT" />
    <result column="cost" property="cost" jdbcType="DOUBLE" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  
    <!-- <resultMap type="com.maiworld.pojo.TbCost" id="BaseResultMap">
		一对一用association标签
		<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="sid" property="sid" jdbcType="BIGINT" />
	    <result column="cost" property="cost" jdbcType="DOUBLE" />
	    <result column="created" property="created" jdbcType="TIMESTAMP" />
	    <result column="status" property="status" jdbcType="VARCHAR" />
		这种映射方式由于是执行一条sql语句findStudent，无法懒加载（也就是按需加载）
		<association property="student" javaType="com.maiworld.pojo.TbStudent">
			<id column="sid" property="sid" jdbcType="BIGINT" />
		    <result column="name" property="name" jdbcType="VARCHAR" />
		    <result column="sex" property="sex" jdbcType="VARCHAR" />
		    <result column="card_id" property="cardId" jdbcType="VARCHAR" />
		    <result column="is_vip" property="isVip" jdbcType="VARCHAR" />
		    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		    <result column="head_pic" property="headPic" jdbcType="VARCHAR" />
		    <result column="phone" property="phone" jdbcType="VARCHAR" />
		    <result column="points" property="points" jdbcType="INTEGER" />
		    <result column="study_status" property="studyStatus" jdbcType="VARCHAR" />
		    <result column="status" property="status" jdbcType="VARCHAR" />
		    <result column="created" property="created" jdbcType="TIMESTAMP" />
		</association>
	</resultMap> -->

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sid, cost, created, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maiworld.pojo.TbCostExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_cost
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_cost
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.maiworld.pojo.TbCostExample" >
    delete from tb_cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maiworld.pojo.TbCost" >
    insert into tb_cost (id, sid, cost, created, 
      status)
    values (#{id,jdbcType=BIGINT}, #{sid,jdbcType=BIGINT}, #{cost,jdbcType=DOUBLE}, #{created,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maiworld.pojo.TbCost" >
    insert into tb_cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=BIGINT},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maiworld.pojo.TbCostExample" resultType="java.lang.Integer" >
    select count(*) from tb_cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_cost
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=BIGINT},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DOUBLE},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_cost
    set id = #{record.id,jdbcType=BIGINT},
      sid = #{record.sid,jdbcType=BIGINT},
      cost = #{record.cost,jdbcType=DOUBLE},
      created = #{record.created,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maiworld.pojo.TbCost" >
    update tb_cost
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=BIGINT},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maiworld.pojo.TbCost" >
    update tb_cost
    set sid = #{sid,jdbcType=BIGINT},
      cost = #{cost,jdbcType=DOUBLE},
      created = #{created,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="studentList" resultType="java.util.Map" >
  		<!-- select * from tb_cost LEFT JOIN tb_student on tb_cost.sid =tb_student.sid -->
  		select * 
		from tb_student 
		LEFT JOIN tb_cost
		on tb_cost.sid =tb_student.sid
		WHERE tb_student.study_status>0
		<!-- select  
			a.id,
			a.cost,
			b.created,
			b.sid,
			b.name,
			b.sex,
			b.phone,
			b.points,
			b.study_status,
			b.is_vip,
			b.status AS status_stu
		FROM tb_cost AS a, tb_student AS b
		where a.sid=b.sid -->
  </select>
  
  
  
</mapper>